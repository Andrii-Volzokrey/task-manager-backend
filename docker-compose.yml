version: '3.8'
services:
  dev:
    command: npm run start:dev
    container_name: task_manager_api
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${BACKEND_PORT}:${BACKEND_PORT}'

  prod:
    command: node dist/main
    container_name: task_manager_api_prod
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    depends_on:
      - db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${BACKEND_PORT}:${BACKEND_PORT}'

  db:
    image: postgres:15-bullseye
    container_name: task-manager-database
    restart: always
    ports:
      - '${DATABASE_PORT}:${DATABASE_PORT}'
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  pgdata: